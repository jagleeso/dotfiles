#!/usr/bin/env python
import argparse
import sys
import re

def main():
    parser = argparse.ArgumentParser(description="")
    parser.add_argument("--from-start", action='store_true')
    parser.add_argument("--from-end", action='store_true')
    parser.add_argument("--until", required=True)
    parser.add_argument("--ignore-first", default=0, type=int,
            help="ignore the first n lines")
    parser.add_argument("file", nargs='?')
    args = parser.parse_args()

    if not args.from_start and not args.from_end:
        parser.error("need --from-start or --from-end")

    def slurp(f):
        return [l.rstrip() for l in f]
    lines = None
    if args.file:
        with open(args.file) as f:
            lines = slurp(f)
    else:
        lines = slurp(sys.stdin)

    start = 0
    if args.ignore_first:
        start = args.ignore_first
    end = None
    if args.from_start:
        for i in range(start, len(lines)):
            if re.search(args.until, lines[i]):
                end = i
                break
    else:
        end = len(lines) - 1
        for i in range(len(lines)-1, start-1, -1):
            if re.search(args.until, lines[i]):
                start = i
                break

    if start is None or end is None:
        return

    for i in range(start, end+1):
        print lines[i]

if __name__ == '__main__':
    main()

