#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import print_function
import argparse
import common
import sys
import os

AG = 'ag-grep'

def main():
    parser = argparse.ArgumentParser("ag wrapper that looks for .agrc options file")
    ag_args = sys.argv[1:]
    if not which(AG):
        print("ERROR: couldn't {AG} find executable".format(AG=AG), file=sys.stderr)
        sys.exit(1)
    ret = ag(ag_args)
    sys.exit(ret)
    
def ag(ag_args):
    agrc_string = ''
    if os.path.exists('.agrc'):
        with open('.agrc') as f:
            agrc_string = ' '.join([line.rstrip() for line in f])
    cmd_string = ' '.join([
            AG, 
            ' '.join(shellquote(s) for s in ag_args), 
            agrc_string])
    # print(cmd_string)
    ret = os.system(cmd_string)
    return ret

# http://stackoverflow.com/questions/377017/test-if-executable-exists-in-python/377028#377028
def which(program):
    def is_exe(fpath):
        return os.path.isfile(fpath) and os.access(fpath, os.X_OK)

    fpath, fname = os.path.split(program)
    if fpath:
        if is_exe(program):
            return program
    else:
        for path in os.environ["PATH"].split(os.pathsep):
            path = path.strip('"')
            exe_file = os.path.join(path, program)
            if is_exe(exe_file):
                return exe_file

    return None

def shellquote(s):
    return "'" + s.replace("'", "'\\''") + "'"

if __name__ == '__main__':
    main()
